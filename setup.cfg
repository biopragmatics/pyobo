##########################
# Setup.py Configuration #
##########################
[metadata]
name = pyobo
version = 0.8.9-dev
description = Handling and writing OBO
long_description = file: README.rst

# URLs associated with the project
url = https://github.com/pyobo/pyobo
download_url = https://github.com/pyobo/pyobo/releases
project_urls =
    Bug Tracker = https://github.com/pyobo/pyobo/issues
    Source Code = https://github.com/pyobo/pyobo

# Author information
author = Charles Tapley Hoyt
author_email = cthoyt@gmail.com
maintainer = Charles Tapley Hoyt
maintainer_email = cthoyt@gmail.com

# License Information
license = MIT
license_file = LICENSE

# Search tags
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3 :: Only
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Chemistry
keywords =
    Open Biomedical Ontologies
    OBO

[options]
install_requires =
    obonet>=0.3.0
    click
    tqdm
    pyyaml
    pandas
    requests
    protmapper
    more_itertools
    more_click>=0.0.2
    humanize
    tabulate
    cachier
    pystow>=0.2.7
    bioversions>=0.5.82
    bioregistry>=0.4.29
    zenodo-client>=0.0.5
    class_resolver
    psycopg2-binary
    # Resource Downloaders
    drugbank_downloader
    chembl_downloader
    umls_downloader
    typing_extensions

# Random options
zip_safe = false
include_package_data = True
python_requires = >=3.8

# Where is my code
packages = find:
package_dir =
    = src

[options.packages.find]
where = src

[options.extras_require]
docs =
    sphinx
    sphinx-rtd-theme
    sphinx-click
    sphinx-autodoc-typehints
    sphinx_automodapi
web =
    flask
    bootstrap-flask
    flask-admin
    flasgger
    # psutil is used in the resolver
    psutil

[options.entry_points]
console_scripts =
    pyobo = pyobo.cli:main
    recurify = pyobo.cli:recurify

pyobo.xrefs =
    cbms2019 = pyobo.xrefdb.sources.cbms2019:get_cbms2019_xrefs_df
    chembl   = pyobo.xrefdb.sources.chembl:get_chembl_xrefs_df
    compath  = pyobo.xrefdb.sources.compath:get_compath_xrefs_df
    famplex  = pyobo.xrefdb.sources.famplex:get_famplex_xrefs_df
    gilda    = pyobo.xrefdb.sources.gilda:get_gilda_xrefs_df
    intact   = pyobo.xrefdb.sources.intact:get_xrefs_df
    ncit     = pyobo.xrefdb.sources.ncit:get_ncit_xrefs_df
    pubchem  = pyobo.xrefdb.sources.pubchem:get_pubchem_mesh_df
    wikidata = pyobo.xrefdb.sources.wikidata:get_wikidata_xrefs_df
    biomappings = pyobo.xrefdb.sources.biomappings:get_biomappings_df


######################
# Doc8 Configuration #
# (doc8.ini)         #
######################
[doc8]
max-line-length = 120

##########################
# Coverage Configuration #
# (.coveragerc)          #
##########################
[coverage:run]
branch = True
source = pyobo
omit =
    tests/*
    docs/*

[coverage:paths]
source =
    src/pyobo
    .tox/*/lib/python*/site-packages/pyobo

[coverage:report]
show_missing = True
exclude_lines =
    def __str__
    def __repr__

##########################
# Darglint Configuration #
##########################
[darglint]
docstring_style=sphinx
strictness=short

#########################
# Flake8 Configuration  #
#########################
[flake8]
ignore =
    S310
# line break before binary operator
    W503
# XML stuff
    S405
    S314
# Whitespace stuff
    E203
# Pickle stuff
    S301
    S403
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    tests/fixtures/*,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs
max-complexity = 25
max-line-length = 120
import-order-style = pycharm
application-import-names =
    pyobo
    tests
